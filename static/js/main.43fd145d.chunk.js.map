{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageButtons","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","page","active","handlePageChangeIfDifferent","items","App","useState","setPerPage","setCurrentPage","length","firstItem","lastItem","slicedItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAoBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA7BW,WACZN,GACHL,EAAaD,EAAc,IAsBzB,oBAWDK,EAAYQ,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASd,IAHrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACV,gBAAeR,EACfM,QAAS,kBAnCiB,SAACE,GAC/Bd,IAAgBc,GAClBb,EAAaa,GAiCQE,CAA4BF,IAL7C,SAOGA,KAZEA,MAiBT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUH,IADZ,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAzDW,WACZL,GACHN,EAAaD,EAAc,IAkDzB,wBC1EFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAOMvB,EAAQmB,EAAMK,OAEdC,GAAavB,EAAc,GAAKD,EAChCyB,EAAWxB,EAAcD,EAAUkB,EAAMK,OAC3CtB,EAAcD,EACdkB,EAAMK,OAEJG,EAAcR,EAAMS,MAAMH,EAAWC,GAE3C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EAAY,EAD7C,cACoDC,EADpD,eACmE1B,EADnE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SA7BY,SAACC,GACrBV,GAAYU,EAAMC,OAAOH,OACzBP,EAAe,IAsBT,UAOE,wBAAQO,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcoB,IAGhB,6BACGI,EAAYZ,KAAI,SAACoB,GAAD,OACf,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.43fd145d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageButtons = getNumbers(1, pageCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCount;\n\n  const prevButton = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextButton = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePageChangeIfDifferent = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={prevButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pageButtons.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            aria-disabled={isFirstPage}\n            onClick={() => handlePageChangeIfDifferent(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={nextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const total = items.length;\n\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  const slicedItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {slicedItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}